#
# 2SUM问题
# The goal of this problem is to implement a variant of the 2-SUM algorithm  
# The file contains 1 million integers, both positive and negative (there might be some repetitions!)
# This is your array of integers, with the ith row of the file specifying the ith entry of the array 
# Your task is to compute the number of target values t in the interval [-10000,10000] (inclusive) such that 
# there are distinct numbers x,y in the input file that satisfy x+y=t
# 解题方法：
# 数据大小为1000000，对每个数都要循环一次，每个数找出匹配的y值。后面这一步是关键所在。
# 如果使用hash把这么多数按照大小分成长度为2^15的数据段，则对于每个x只需遍历两个数据段即可
# 而数据是稀疏的，每个数据段之中可能只有一到两个值，这样算法复杂度就是O(N)。

from time import clock  
start=clock()  

f=open('2sum.txt','r') 
tmp=f.read()  
f.close()   
print('read complete')  

vallist=[int(val) for val in tmp.split()]  
vallist=set(vallist)  
print('convert to set@int complete')  

def myhash(val):  
    return val>>15   #Returns val with the bits shifted to the right by 15 places
valnew=[True for x in range(6103503)]  
minval=min(vallist)  

for val in vallist:  
    val_key=myhash(val-minval)  
    if valnew[val_key]==True:  #there is no already inserted val here
        valnew[val_key]=[val]  
    else:  #there is a val already inserted here, we just append the following val in
        valnew[val_key].append(val)  
print('hash complete',len(valnew),len(vallist))  

tlist=[0 for x in range(-10000,10000+1)]  
for val in vallist: #for each val we need to search t-val in theory if we use brute force search
    firkey=myhash(-10000-val-minval)  
    seckey=myhash(10000-val-minval)  
    if firkey<len(valnew):  
        if valnew[firkey]!=True:  
            for tmp in valnew[firkey]:  
                if tmp+val in range(-10000,10000+1):  
                    tlist[tmp+val+10000]=1  
    if seckey<len(valnew):    
        if valnew[seckey]!=True:  
            for tmp in valnew[seckey]:  
                if tmp+val in range(-10000,10000+1):  
                    tlist[tmp+val+10000]=1  
  
print('output: ',sum(tlist))  
  
finish=clock()  
print finish-start 

# below is the coding using brute force search, jsut give a sense about how to think about this ques
# but it runs in hours 
import sys
filename = "2sum.txt"
numbers = [int(l) for l in open(filename)]
targets = range(-10000,10001)
H = {}
answers = {} 
for i in numbers:
  H[i] = True
for i in numbers:
  for t in targets:
    if t - i in H:
      if i == t - i:
        continue
      if t not in answers:
        answers[t] = set([tuple(sorted([i, t - i]))])
      else:
        answers[t].add(tuple(sorted([i, t - i]))) 
print len(answers)
